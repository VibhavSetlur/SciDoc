[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "scidoc"
version = "0.1.0"
description = "A comprehensive science researcher assistant tool for tracking GitHub changes, managing documentation, and analyzing data files"
authors = [
    {name = "SciDoc Team", email = "scidoc@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["bioinformatics", "research", "documentation", "github", "ai", "summarization"]
dependencies = [
    "typer>=0.9.0",
    "rich>=13.0.0",
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "networkx>=3.0",
    "pyyaml>=6.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "gitpython>=3.1.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    "jinja2>=3.1.0",
    "click>=8.1.0",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "aiofiles>=23.0.0",
    "watchdog>=3.0.0",
    "pydantic>=2.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.11.0",
    "redis>=4.6.0",
    "celery>=5.3.0",
    "prometheus-client>=0.17.0",
    "structlog>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "tox>=4.6.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
web = [
    "streamlit>=1.25.0",
    "dash>=2.11.0",
    "plotly>=5.15.0",
]

[project.scripts]
scidoc = "scidoc.cli:app"

[project.urls]
Homepage = "https://github.com/scidoc/scidoc"
Documentation = "https://scidoc.readthedocs.io"
Repository = "https://github.com/scidoc/scidoc"
"Bug Tracker" = "https://github.com/scidoc/scidoc/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["scidoc*"]

[tool.setuptools.package-data]
scidoc = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["scidoc"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["scidoc"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
